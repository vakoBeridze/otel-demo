version: '3.7'

services:

  service-a1:
    container_name: service-a1
    build:
      context: .
      dockerfile: ./service-a/Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_APPLICATION_NAME: service-a1
      SERVICE_B_URL: http://service-b1:8082

  service-a2:
    container_name: service-a2
    build:
      context: .
      dockerfile: ./service-a/Dockerfile
    ports:
      - "8083:8081"
    environment:
      SPRING_APPLICATION_NAME: service-a2
      SERVICE_B_URL: http://service-b2:8082

  service-b1:
    container_name: service-b1
    build:
      context: .
      dockerfile: ./service-b/Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_APPLICATION_NAME: service-b1
      SERVICE_A_URL: http://service-a1:8081

  service-b2:
    container_name: service-b2
    build:
      context: .
      dockerfile: ./service-b/Dockerfile
    ports:
      - "8084:8082"
    environment:
      SPRING_APPLICATION_NAME: service-b2
      SERVICE_A_URL: http://service-a2:8081

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:0.88.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    #      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      #      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "3200:3200"   # tempo
      - "4317"  # otlp grpc

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"